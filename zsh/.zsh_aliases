# General.
alias ls="exa --git -lh --octal-permissions --color-scale"
alias l="ls"
alias rm="trash"
## http://www.bashoneliners.com/oneliners/235/
mkcd(){ mkdir -p "$1" && cd "$1" }
## https://superuser.com/a/1545418/298390
tar-tree(){ tar -tf "$1" | tree --fromfile . }
rmr(){ [ -n "$1" ] && (fd -I "$1" | xargs rm -rf --) }
rme(){ ls | \grep -v "$1" | xargs rm -rf }
alias du="dust -b"
alias df="du"
alias watch="viddy"

# Text/Document.
alias grep="grep -n --color"
alias gg="rga -i -n --pretty"
function gf(){ gg "$1" -g "$2" }
function gfa(){ gg "$1" -g "*.$2" }
alias cat="bat"
alias less="less -N"
alias man="PAGER=most man"
alias pdf="zathura"

# Mics.
alias reload="source ~/.zshrc"
website-capture(){ wkhtmltoimage --format png --quality 100 "$1" "$1".png }
# https://stackoverflow.com/a/27229914/2338672
socket-to-http() { socat TCP-LISTEN:"${2:-8000}",reuseaddr,fork UNIX-CLIENT:"${1}" }
# https://www.howtogeek.com/414574/how-to-burn-an-iso-file-to-a-usb-drive-in-linux/
iso-to-usb() { sudo dd bs=4M if="${1}" of="${2}" conv=fdatasync status=progress }

# System.
alias u="yay -Syu --noconfirm && v -c :PlugUpgrade +quitall && v -c :PlugUpdate +quitall && v -c :CocUpdateSync +quitall && v -c :BlackUpgrade +quitall && v -c :TSUpdateSync +quitall && pacman -Qdt"
alias top="btop"
function cleanup() {
    docker system prune
    sudo pacman -Scc
}

# Monitor.
INTERNAL_MONITOR=$(xrandr | \grep primary | cut -d' ' -f1)
EXTERNAL_MONITOR=$(xrandr | \grep ' connected' | tail -1 | cut -d' ' -f1)
function monitor-external() {
    xrandr --output "${INTERNAL_MONITOR}" --off --output "${EXTERNAL_MONITOR}" --mode 1920x1080 --pos 0x0 --rotate normal
}
function monitor-internal() {
    xrandr --output "${INTERNAL_MONITOR}" --primary --mode 2048x1152 --pos 0x0 --rotate normal --output "${EXTERNAL_MONITOR}" --off
}

# Utility.
alias ascii="graph-easy --from=dot --as_ascii"
## https://medium.com/@GroundControl/better-git-diffs-with-fzf-89083739a9cb
alias f="fzf-tmux --cycle -i --preview 'bat {-1} --color=always'"
alias o="v \`f || echo '-c :quitall'\`"
alias cb="xclip -selection clipboard"
alias calc="qalc"
alias br="br -dp"

# Disk.
alias disk-usage="ncdu"
alias disk-usage-i="diskonaut"
alias fm="br"
z(){
    if [ "$#" -eq 0 ]; then
        # https://github.com/x-motemen/ghq/issues/294#issuecomment-662071100
        cd "$(zoxide query -i)"
    else
        cd "$(zoxide query $@)"
    fi
}

# Process.
alias kp="\ps aux | peco | awk '{print \$2}' | xargs kill -9"
alias ap="\ps aux | peco"
alias ps="procs"

# Compression.
alias tgz='rpy && rm -f `basename $PWD`.tar.gz && tar --exclude='.git' --exclude='.gitignore' --exclude-vcs-ignores -zcvf `basename $PWD`.tar.gz ./*'
# https://gitlab.com/dwt1/dotfiles/-/blob/master/.bashrc
function extract()
{
  if [ -f "$1" ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1   ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *.deb)       ar x $1      ;;
      *.tar.xz)    tar xf $1    ;;
      *.tar.zst)   unzstd $1    ;;
      *)           echo "'$1' cannot be extracted via extract()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# Git.
p(){
    if [ "$#" -eq 0 ]; then
        # https://github.com/x-motemen/ghq/issues/294#issuecomment-662071100
        cd "$(p list -p | fzf-tmux -1 -e)"
    else
        ghq "$@"
    fi
}
alias gch="git branch -a | fzf-tmux | tr -d '[:space:]' | xargs git checkout"
alias diff="delta"
alias blame="git blame \`f\`"

# Server/Proxy.
alias ping="gping --vertical-margin 0"
alias x='export http_proxy="http://127.0.0.1:8118"'
alias dx='export http_proxy=""'
alias whereiam='echo $(curl -s http://ip-api.com/json | jq -r ".country,.city")'
alias dig="dog"

# Kubernetes
source <(kubectl completion zsh)
alias kubectl="kubecolor"
compdef kubecolor=kubectl

# Docker.
## http://www.bashoneliners.com/oneliners/252/
alias dic="docker images -q -f dangling=true | xargs --no-run-if-empty --delim='\n' docker rmi -f"
dcr(){ docker run --rm "${@:2}" "$1" }
dca(){ docker run -ti --rm "${@:2}" "$1" sh }
dce(){ docker exec -ti "$1" "${2:-bash}" }

# Net.
alias port-scan="rustscan"

# DB.
function redis-server() {
    docker run -d --rm -p 6379:6379 --name redis redis:alpine redis-server
}
function mysql-server() {
    docker run -d --rm -p 3306:3306 --name mysql -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE="${1:-db}" -e MYSQL_USER=user -e MYSQL_PASSWORD=secret mysql
}
function elasticsearch-server() {
    docker run -d --rm -p 9200:9200 -p 9300:9300 --name elasticsearch -e 'discovery.type=single-node' -e 'xpack.security.enabled=false' elasticsearch:8.3.1
}
function postgresql-server() {
    docker run -d --rm -p 5432:5432 --name postgresql -e POSTGRES_DB="${1:-db}" -e POSTGRES_USER=user -e POSTGRES_PASSWORD=secret postgres
}

# Development.
## https://github.com/universal-ctags/ctags/issues/218#issuecomment-72355190
alias gt="fd | ctags --links=no -L-"
http-server(){ python -m http.server "$1" & firefox http://localhost:"$1" }
code-capture() { silicon "$1" -o $(basename "${1%%.*}.png") --no-window-controls --font "Fira Code" --background '#fff0' --theme Coldark-Dark }
alias code-info="cloc"

# C/C++.
alias rcpp="rm -rf CMakeFiles/ Testing/ CMakeCache.txt *.cmake Makefile compile_commands.json *.cbp"

# Python.
alias py="ipython --no-term-title --no-confirm-exit --no-banner --no-simple-prompt --PlainTextFormatter.pprint=True --TerminalInteractiveShell.highlighting_style=material"
alias rpy="fd -I '(build|dist|__pycache__|egg-info)' | xargs rm -rf --"

# Editor.
alias vim="nvim"
alias v="nvim"
alias hex="hexyl"

# Tmux.
alias t='basename $(pwd) | xargs tmux new-session -d -s || echo $(basename $(dirname $(pwd)))/$(basename $(pwd)) | xargs tmux new-session -d -s ; tmux attach'
alias tl="tmux ls -F \#S"
alias ta="tmux attach"
alias tq="tl | xargs -n 1 tmux kill-session -t ; tl"

